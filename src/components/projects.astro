---
interface Project {
  title: string;
  description: string;
  image: string;
  tech: string[];
  features: string[];
  live: string;
  links?: { text: string; url: string }[]; // added optional links property
}

const projects: Project[] = [
  {
    title: "Reward Rally",
    description:
      "A comprehensive enterprise gamification platform that transforms engagement and productivity through customizable challenges, rewards, and analytics. Features include real-time leaderboards, achievement tracking, and seamless integration with existing systems.",
    image: "/projects/reward-rally.gif",
    tech: ["Node.js", "MongoDB", ".NET Core", "Angular", "Azure", "Docker"],
    features: [
      "Microservices architecture with Node.js and .NET Core",
      "Azure AD B2C authentication integration",
      "Custom NPM packages for React, Angular, and Flutter",
      "Admin panel with Tailwind CSS",
      "Teams & Shopify extensions",
    ],
    live: "https://www.rewardrally.in/",
  },
  {
    title: "Media Monitoring Dashboard",
    description:
      "Real-time analytics dashboard that transforms media data into actionable insights. Built with a focus on performance and user experience, featuring interactive visualizations and comprehensive reporting tools.",
    image: "/projects/data-analytics.png",
    tech: ["React", "Redux", "Azure ADB2C", "D3.js", "Node.js", "PostgreSQL"],
    features: [
      "Interactive word clouds and time-series visualizations",
      "Real-time news data integration with websockets",
      "Advanced filtering and data export capabilities",
      "Role-based access control with Azure ADB2C",
    ],
    live: "",
  },
  {
    title: "Reward Rally â€“ Microsoft Teams Extension",
    description:
      "Microsoft Teams Tab and Bot extension for Reward Rally, enabling seamless employee engagement directly within Teams. It allows users to track challenges, earn rewards, and view leaderboards without leaving Teams.",
    image: "/projects/teams.png",
    tech: ["Teams SDK", "Bot Framework", "Azure", "Node.js"],
    features: [
      "Teams Tab integration for personalized dashboards",
      "Bot for real-time notifications and interactions",
      "SSO with Azure AD for secure access",
    ],
    live: "https://appsource.microsoft.com/en-us/product/office/wa200007920?tab=overview",
  },
  {
    title: "Reward Rally â€“ Shopify Extension",
    description:
      "Shopify Theme App Extension and Checkout Extension that integrates Reward Rallyâ€™s gamification features into the e-commerce experience. Merchants can reward customers for purchases, referrals, and engagement.",
    image: "/projects/shopify.webp",
    tech: ["Shopify App Bridge", "Remix", "Node.js", "React", "Azure"],
    features: [
      "Theme extension for embedding reward widgets",
      "Checkout extension to apply reward points seamlessly",
      "Real-time synchronization with Reward Rally platform",
    ],
    live: "https://apps.shopify.com/reward-rally",
  },
  {
    title: "Corporate Websites",
    description:
      "Collection of high-performance, accessible corporate websites built with modern technologies. Each site features custom animations, optimized assets, and seamless content management integration.",
    image: "/projects/website.png",
    tech: ["AstroJS", "GSAP", "TailwindCSS", "Strapi CMS", "TypeScript"],
    features: [
      "Blazing fast page loads with server-side rendering",
      "Engaging scroll-based animations using GSAP",
      "Headless CMS integration for content management",
      "100/100 Lighthouse performance scores",
    ],
    live: "https://www.peninsularresearchops.com/",
    links: [
      { text: "PRO Website", url: "https://www.peninsularresearchops.com/" },
      { text: "KYN Website", url: "https://www.kynhood.com" },
    ],
  },
];
---

<section id="projects" class="py-20 bg-[#0a192f]">
  <div class="container mx-auto px-6">
    <div class="text-center mb-16 projects-header">
      <p class="text-[#64ffda] font-medium mb-2">&lt; what i've built /&gt;</p>
      <h2
        class="text-3xl md:text-4xl font-bold text-white relative inline-block"
      >
        Featured Projects
        <span
          class="absolute -bottom-2 left-1/2 -translate-x-1/2 w-16 h-1 bg-[#64ffda] rounded-full projects-underline"
        ></span>
      </h2>
    </div>

    <div class="space-y-24 projects-container">
      {
        projects.map((project, index) => (
          <div
            class={`project-card flex flex-col md:flex-row items-stretch gap-8 ${
              index % 2 === 1 ? "md:flex-row-reverse" : ""
            }`}
            data-index={index}
          >
            {/* Project Image */}
            <div
              class="md:w-1/2 rounded-xl overflow-hidden bg-[#64ffda]/10 shadow-lg relative group"
              data-aos={index % 2 === 0 ? "fade-right" : "fade-left"}
              data-aos-duration="1200"
            >
              <img
                src={project.image}
                alt={project.title}
                class="object-cover w-full h-full transition-transform duration-500 group-hover:scale-105"
              />

              {project.live && (
                <div class="absolute inset-0 bg-black/40 opacity-0 group-hover:opacity-100 transition-opacity duration-500 flex items-center justify-center">
                  <span class="text-[#64ffda] text-lg font-medium">
                    <a href={project.live} target="_blank">
                      View Project
                    </a>
                  </span>
                </div>
              )}
            </div>

            {/* Project Content */}
            <div
              class="md:w-1/2 flex"
              data-aos={index % 2 === 0 ? "fade-left" : "fade-right"}
              data-aos-duration="1200"
            >
              <div class="relative backdrop-blur-md bg-[#112240]/90 p-8 rounded-xl flex flex-col justify-center shadow-lg transition duration-500 hover:shadow-[#64ffda]/20 hover:-translate-y-1">
                <h3
                  class="text-[#64ffda] text-sm tracking-wider mb-2 uppercase"
                  data-aos="fade-down"
                  data-aos-duration="800"
                >
                  Featured Project
                </h3>
                <h4
                  class="text-2xl md:text-3xl font-bold text-white mb-4 group-hover:text-[#64ffda] transition-colors duration-300"
                  data-aos="zoom-in"
                  data-aos-duration="1000"
                >
                  {project.title}
                </h4>
                <p
                  class="text-gray-400 mb-6 leading-relaxed"
                  data-aos="fade-up"
                  data-aos-duration="1200"
                >
                  {project.description}
                </p>

                {/* Tech Stack */}
                <div
                  class="flex flex-wrap gap-2 mb-6"
                  data-aos="zoom-in-up"
                  data-aos-duration="1000"
                >
                  {project.tech.map((tech) => (
                    <span class="text-xs md:text-sm text-[#64ffda] bg-[#64ffda]/10 px-3 py-1 rounded-full border border-[#64ffda]/30 transition duration-300 hover:bg-[#64ffda]/20 hover:scale-105">
                      {tech}
                    </span>
                  ))}
                </div>

                {/* Features */}
                <ul
                  class="space-y-2 text-gray-400"
                  data-aos="fade-up"
                  data-aos-duration="1200"
                >
                  {project.features.map((feature, i) => (
                    <li
                      class="flex items-start transition duration-300 hover:text-[#64ffda]"
                      data-aos="fade-up"
                      data-aos-delay={i * 150}
                      data-aos-duration="1000"
                    >
                      <span class="text-[#64ffda] mr-2">â–¹</span>
                      {feature}
                    </li>
                  ))}
                </ul>

                {/* Links */}
                <div
                  class="flex gap-6 mt-8"
                  data-aos="fade-up"
                  data-aos-duration="1200"
                >
                  {project.live && (
                    <a
                      href={project.live}
                      target="_blank"
                      rel="noopener noreferrer"
                      class="text-[#64ffda] font-medium flex items-center gap-2 transition-colors duration-300 hover:text-white hover:underline"
                    >
                      ðŸš€ Visit Site
                    </a>
                  )}
                  {project.links &&
                    project.links.map((link) => (
                      <a
                        href={link.url}
                        target="_blank"
                        rel="noopener noreferrer"
                        class="text-[#64ffda] font-medium flex items-center gap-2 transition-colors duration-300 hover:text-white hover:underline"
                      >
                        ðŸ”— {link.text}
                      </a>
                    ))}
                </div>
              </div>
            </div>
          </div>
        ))
      }
    </div>
  </div>
</section>

<script is:inline>
  document.addEventListener("DOMContentLoaded", function () {
    if (typeof gsap !== "undefined" && typeof ScrollTrigger !== "undefined") {
      // Animate projects header
      gsap.fromTo(
        ".projects-header",
        { opacity: 0, y: 50 },
        {
          opacity: 1,
          y: 0,
          duration: 0.8,
          ease: "power2.out",
          scrollTrigger: {
            trigger: ".projects-header",
            start: "top 80%",
          },
        }
      );

      // Animate underline
      gsap.fromTo(
        ".projects-underline",
        { width: 0 },
        {
          width: "4rem",
          duration: 0.6,
          ease: "power2.out",
          scrollTrigger: {
            trigger: ".projects-underline",
            start: "top 80%",
          },
        }
      );

      // Animate each project card
      gsap.utils.toArray(".project-card").forEach((card, index) => {
        const isEven = index % 2 === 0;
        const image = card.querySelector(".project-image");
        const content = card.querySelector(".project-content");

        // Set initial states
        gsap.set(image, {
          opacity: 0,
          x: isEven ? -100 : 100,
        });
        gsap.set(content, {
          opacity: 0,
          x: isEven ? 100 : -100,
        });

        // Create timeline for each project
        const tl = gsap.timeline({
          scrollTrigger: {
            trigger: card,
            start: "top 85%",
          },
        });

        tl.to(image, {
          duration: 0.8,
          opacity: 1,
          x: 0,
          ease: "power2.out",
        }).to(
          content,
          {
            duration: 0.8,
            opacity: 1,
            x: 0,
            ease: "power2.out",
          },
          "-=0.6"
        );

        // Add hover animations
        card.addEventListener("mouseenter", () => {
          gsap.to(card, {
            y: -5,
            duration: 0.3,
            ease: "power2.out",
          });
        });

        card.addEventListener("mouseleave", () => {
          gsap.to(card, {
            y: 0,
            duration: 0.3,
            ease: "power2.out",
          });
        });
      });

      // Animate tech tags on hover
      gsap.utils.toArray(".project-card").forEach((card) => {
        const techTags = card.querySelectorAll(".project-content span");

        techTags.forEach((tag) => {
          tag.addEventListener("mouseenter", () => {
            gsap.to(tag, {
              scale: 1.1,
              duration: 0.2,
              ease: "power2.out",
            });
          });

          tag.addEventListener("mouseleave", () => {
            gsap.to(tag, {
              scale: 1,
              duration: 0.2,
              ease: "power2.out",
            });
          });
        });
      });
    }
  });
</script>
